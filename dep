#!/usr/bin/perl

#$target = shift @ARGV or die "need a target name\n";

%hash = ();

foreach $i ("Makefile", "makefile"){
    ($makefile=$i and last) if (-f $i);
};

sub get_dep($){
    my $file = $_[0];
    my @deps = ();
    open IN, $file or die "can't open $file\n";
    while(<IN>){
	/^\s*\#include\s*\"(.*?)\"/
	    and push @deps, $1;
    };
    return \@deps;
};

$depth = 0;

sub write_dep($){
    my $file = $_[0];
    my @deps = ();
    $depth++;
    if (!$dephash{$file}){
	$dephash{$file} = 1;
	push @deps, $file;
	foreach $dep (@{$hash{$file}}){
	    push @deps, write_dep($dep);
	}
    }
    $depth--;
    return (@deps);
};

foreach $file (<*.cpp>,<*.c>,<*.h>){
    $hash{$file} = get_dep($file);
};

foreach $key (keys %hash){
    local @buf = ();
    foreach (@{$hash{$key}}){
	(-f $_ && push @buf, $_)
	    or (print STDERR "included from $key: $_ not found, ignored\n");
    }
    @{$hash{$key}} = @buf;
};

@final = ();
$text="";
foreach $file (<*.c>,<*.cpp>){
    %dephash = ();
    my @deps = write_dep($file);
    push @deps, $makefile;
    $file =~ s/\.c(pp)?$/.o/si;
    push @final, $file;
    $text.= "$file: ".join(' ',@deps)."\n\n";
};

$text.= "ALL_TARGETS=". join(' ',@final). "\n";

open (MAKE, $makefile) || die "can't read $makefile\n";
$make = join '', (<MAKE>);
open (MAKE, ">$makefile.bak") 
    and print MAKE $make 
    and close MAKE;

$make =~ s/\#\# begin dep.*?\#\# end dep/\#\# begin dep: DO NOT REMOVE THIS LINE\n$text\n\#\# end dep/si;

open (MAKE, ">$makefile");
print MAKE $make;
close(MAKE);

